name: Power BI Deployment

on:
  push:
    branches:
      - powershell

jobs:
  deploy:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up PowerShell
        shell: pwsh
        run: |
          Install-Module -Name MicrosoftPowerBIMgmt -Force -Scope CurrentUser
        env:
          PSGALLERYApiKey: ${{ secrets.PSGALLERY_API_KEY }}

      - name: Set up environment
        run: |
          $ParamDbName = "database" # Replace with the name of the parameter to update
          $DbName = "devidata"  # Replace with the new value for the parameter
          $ParamDbServerName = "Server" # Replace with the name of the server name parameter
          $DbServer = "devidata.database.windows.net" # Replace with the new server name value
          $WorkspaceId = "96b1ab18-cd5e-4e01-8ffd-8bf59651f1bf" # Replace with your Power BI workspace ID
          $DatasetId = "6bd5bd3b-4af9-4e6c-9151-4cca6cbb6ed5" # Replace with your dataset ID
        env:
          PARAM_DB_NAME: $ParamDbName
          DB_NAME: $DbName
          PARAM_DB_SERVER_NAME: $ParamDbServerName
          DB_SERVER: $DbServer
          WORKSPACE_ID: $WorkspaceId
          DATASET_ID: $DatasetId

      - name: Deploy Power BI Report
        run: |
          # Replace this step with your actual report deployment step.
          # You can use the Power BI CLI or another deployment method here.
          pbicli deploy -r ./finaldashboard.pbix -w $WORKSPACE_ID -n "finaldashboard"
          echo "Deploying Power BI report..."

      - name: Update Dataset Parameters
        run: |
          $Parameters = @{
            "updateDetails"= @(
                @{
                    "name"="$env:PARAM_DB_NAME";
                    "newValue"="$env:DB_NAME";
                },
                @{
                    "name"="$env:PARAM_DB_SERVER_NAME";
                    "newValue"="$env:DB_SERVER";
                }            
            )
          }
          $ParametersJson = $Parameters | ConvertTo-Json -Compress
          $AccessToken = $(az account get-access-token --query accessToken -o tsv)
          $Headers = @{
            'Authorization' = "Bearer $AccessToken"
            'Content-Type' = 'application/json'
          }
          $Url = "https://api.powerbi.com/v1.0/myorg/groups/$($env:WORKSPACE_ID)/datasets/$($env:DATASET_ID)/Default.UpdateParameters"
          Invoke-RestMethod -Method Post -Uri $Url -Headers $Headers -Body $ParametersJson
